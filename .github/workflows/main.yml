name: Compare tables and send diff by email

# Configure Manual Trigger
#on:
#  workflow_dispatch:

on:
  schedule:
    - cron: '0 10/8 * * *' # At minute 0 past every 8th hour from 10 through 23

jobs:
  compare-tables-and-send-email:
    runs-on: ubuntu-latest
    permissions:                # Job-level permissions configuration starts here
      contents: write           # 'write' access to repository contents
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12' # Install the Python version needed

      # Install dependencies
      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Execute the Python script to create a CSV
      - name: Compare tables
        env:
          URL: ${{ vars.FSGT68_URL }}
          EMAIL_RECEIVER_LIST: ${{ secrets.EMAIL_RECEIVER_LIST }}
          EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
          EMAIL_APP_PASSWORD: ${{ secrets.EMAIL_APP_PASSWORD }}
          EMAIL_SUBJECT: ${{ vars.FSGT68_EMAIL_SUBJECT }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          PORT: ${{ secrets.PORT }}
        run: python main.py

      # Check if a CSV table was created
      - name: Check for Changes
        id: check_changes
        run: |
          #if [[ -n "$(git diff --exit-code)" ]]; then
          if [[ -n "$(git ls-files --others --exclude-standard)" ]]; then
            echo "Changes detected."
            echo "::set-output name=has_changes::true"
          else
            echo "No changes detected."
            echo "::set-output name=has_changes::false"
          fi
      
      - name: Commit and Push Changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          # configure user
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

          # stage any file changes to be committed
          git add tables/*

          # make commit with staged changes
          git commit -m 'new table created'

          # push the commit back up to source GitHub repository
          git push
